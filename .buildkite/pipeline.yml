x-anchors:
  agent-image: &agent-image buildkite/agent:3.43.1

env:
  DRY_RUN: false # set to true to disable publishing releases
agents:
  queue: kubernetes

steps:
  - name: ":wave::earth_asia: Hello World!"
    plugins:
      - kubernetes:
          podSpec:
            nodeSelector:
              kubernetes.io/arch: arm64
            containers:
              - image: alpine:latest
                command: [echo]
                args:
                - "Hello, world!"

  - name: ":go: go fmt"
    key: test-go-fmt
    plugins:
      - kubernetes:
          podSpec:
            nodeSelector:
              kubernetes.io/arch: amd64
            containers:
              - image: golang:1.20-alpine
                command:
                  - .buildkite/steps/test-go-fmt.sh

  - name: ":linux: Linux AMD64 Tests"
    key: test-linux-amd64
    artifact_paths: junit-*.xml
    plugins:
      - kubernetes:
          podSpec:
            nodeSelector:
              kubernetes.io/arch: amd64
            containers:
              - image: golang:1.20-alpine
                command:
                  - .buildkite/steps/tests.sh

  - name: ":linux: Linux ARM64 Tests"
    key: test-linux-arm64
    command: ".buildkite/steps/tests.sh"
    artifact_paths: junit-*.xml
    plugins:
      - kubernetes:
          podSpec:
            nodeSelector:
              kubernetes.io/arch: arm64
            containers:
              - image: golang:1.20-alpine
                command:
                  - .buildkite/steps/tests.sh

  - name: ":satellite: Detect Data Races"
    key: test-race-linux
    artifact_paths: junit-*.xml
    plugins:
      - kubernetes:
          podSpec:
            nodeSelector:
              kubernetes.io/arch: amd64
            containers:
              - image: golang:1.20
                command:
                  - .buildkite/steps/tests.sh -race

# Does not work becuase the plugin uses docker-compose
#
#   - label: ":writing_hand: Annotate with Test Failures"
#     depends_on:
#       - test-linux-amd64
#       - test-race-linux
#       - test-linux-arm64
#     plugins:
#       - kubernetes:
#           podSpec:
#             nodeSelector:
#                kubernetes.io/arch: amd64
#             containers:
#               - image: buildkite/agent:3.43.1
#       - junit-annotate#v1.6.0:
#           artifacts: junit-*.xml

  - group: ":hammer_and_wrench: Binary builds"
    steps:
    - name: ":{{matrix.os}}: Build {{matrix.os}} {{matrix.arch}} binary"
      key: build-binary
      depends_on:
        # don't wait for slower windows tests
        - test-linux-amd64
        - test-linux-arm64
      artifact_paths: "pkg/*"
      plugins:
        - kubernetes:
            podSpec:
              nodeSelector:
                kubernetes.io/arch: amd64
              containers:
                - image: golang:1.20
                  command:
                    - .buildkite/steps/build-binary.sh "{{matrix.os}}" "{{matrix.arch}}"
      matrix:
        setup:
          os:
            - darwin
            - freebsd
            - linux
            - openbsd
            - windows
          arch:
            - "386"
            - amd64
            - arm64
        adjustments:
          - with: { os: darwin, arch: "386" }
            skip: macOS no longer supports x86 binaries

          - with: { os: dragonflybsd, arch: amd64 }

          - with: { os: freebsd, arch: arm64 }
            skip: arm64 FreeBSD is not currently supported

          - with: { os: linux, arch: arm }
          - with: { os: linux, arch: armhf }
          - with: { os: linux, arch: ppc64 }
          - with: { os: linux, arch: ppc64le }
          - with: { os: linux, arch: mips64le }
          - with: { os: linux, arch: s390x }

          - with: { os: netbsd, arch: amd64 }

          - with: { os: openbsd, arch: arm64 }
            skip: arm64 OpenBSD is not currently supported

  - name: ":mag: Extract Agent Version Metadata"
    key: set-metadata
    plugins:
      - kubernetes:
          podSpec:
            nodeSelector:
              kubernetes.io/arch: amd64
            containers:
              - image: golang:1.20
                command:
                  -  .buildkite/steps/extract-agent-version-metadata.sh

  - group: ":docker: Docker Image Builds"
    steps:
      - name: ":docker: {{matrix}} image build"
        key: build-docker
        depends_on:
          - build-binary
          - set-metadata
        plugins:
          - kubernetes:
              podSpec:
                serviceAccount: ecr-push
                nodeSelector:
                  kubernetes.io/arch: amd64
                containers:
                  - name: builder
                    image: *agent-image
                    command:
                      - .buildkite/steps/build-docker-image.sh "{{matrix}}"
                    volumeMounts:
                      - name: buildkit-client
                        mountPath: /buildkit/certs
                volumes:
                  - name: buildkit-client
                    secret:
                      secretName: buildkit-client-certs
        matrix:
          setup:
            - alpine
            - alpine-k8s
            - ubuntu-18.04
            - ubuntu-20.04
            - sidecar

  - group: ":docker: Docker Image Tests"
    steps:
      - name: ":docker: {{matrix.arch}} image test"
        key: test-docker
        agents:
          queue: kubernetes
        depends_on:
          - build-docker
        matrix:
          setup:
            variant:
              - alpine
              - alpine-k8s
              - ubuntu-18.04
              - ubuntu-20.04
            arch:
              - amd64
              - arm64
        plugins:
          - kubernetes:
              podSpec:
                serviceAccount: ecr-push
                nodeSelector:
                  kubernetes.io/arch: "{{matrix.arch}}"
                containers:
                  - name: test-agent-can-run
                    image: 253213882263.dkr.ecr.ap-southeast-2.amazonaws.com/agent:{{matrix.variant}}-build-$BUILDKITE_BUILD_NUMBER
                    command: ["buildkite-agent", "--version"]
                  - name: test-alpine-docker-compose
                    image: 253213882263.dkr.ecr.ap-southeast-2.amazonaws.com/agent:{{matrix.variant}}-build-$BUILDKITE_BUILD_NUMBER
                    command: ["docker-compose", "--version"]
                  - name: test-alpine-tini
                    image: 253213882263.dkr.ecr.ap-southeast-2.amazonaws.com/agent:{{matrix.variant}}-build-$BUILDKITE_BUILD_NUMBER
                    command: ["tini", "--version"]
                  - name: test-alpine-tini-old-path
                    image: 253213882263.dkr.ecr.ap-southeast-2.amazonaws.com/agent:{{matrix.variant}}-build-$BUILDKITE_BUILD_NUMBER
                    command: ["/sbin/tini", "--version"]

      # sidecar tests are special
      - name: ":docker: {{matrix.arch}} image test"
        key: test-docker-amd64
        agents:
          queue: kubernetes
        depends_on:
          - build-docker
        matrix:
          setup:
            arch:
              - amd64
              - arm64
        plugins:
          - kubernetes:
              podSpec:
                serviceAccount: ecr-push
                nodeSelector:
                  kubernetes.io/arch: "{{matrix.arch}}"
                containers:
                  - name: test-agent-can-run
                    image: 253213882263.dkr.ecr.ap-southeast-2.amazonaws.com/agent:sidecar-build-$BUILDKITE_BUILD_NUMBER
                    command: ["/buildkite/bin/buildkite-agent", "--version"]
